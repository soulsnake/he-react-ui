// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SingleSelect /> rendered correctly with Async fixture 1`] = `
<SingleSelect
  disabled={false}
  error=""
  id="demo"
  inline={false}
  loadOptionsAsync={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
          [Function],
        ],
      ],
    }
  }
  name="demo"
  onBeforeOpen={[Function]}
  onChange={[Function]}
  onClose={[Function]}
  value={null}
>
  <div
    className="outer"
  >
    <div
      className="relative"
    >
      <div
        className="container noLabel"
      >
        <Async
          autoload={true}
          cache={false}
          className="select"
          disabled={false}
          id="demo"
          ignoreAccents={true}
          ignoreCase={true}
          joinValues={true}
          loadOptions={
            [MockFunction] {
              "calls": Array [
                Array [
                  "",
                  [Function],
                ],
              ],
            }
          }
          loadingPlaceholder="Loading..."
          name="demo"
          onChange={[Function]}
          onClose={[Function]}
          onOpen={[Function]}
          options={Array []}
          searchPromptText="Type to search"
          valueRenderer={[Function]}
        >
          <Select
            arrowRenderer={[Function]}
            autoload={true}
            autosize={true}
            backspaceRemoves={true}
            backspaceToRemoveMessage="Press backspace to remove {label}"
            cache={false}
            className="select"
            clearAllText="Clear all"
            clearRenderer={[Function]}
            clearValueText="Clear value"
            clearable={true}
            closeOnSelect={true}
            deleteRemoves={true}
            delimiter=","
            disabled={false}
            escapeClearsValue={true}
            filterOptions={[Function]}
            id="demo"
            ignoreAccents={true}
            ignoreCase={true}
            inputProps={Object {}}
            isLoading={true}
            joinValues={true}
            labelKey="label"
            loadOptions={
              [MockFunction] {
                "calls": Array [
                  Array [
                    "",
                    [Function],
                  ],
                ],
              }
            }
            loadingPlaceholder="Loading..."
            matchPos="any"
            matchProp="any"
            menuBuffer={0}
            menuRenderer={[Function]}
            multi={false}
            name="demo"
            noResultsText="Loading..."
            onBlurResetsInput={true}
            onChange={[Function]}
            onClose={[Function]}
            onCloseResetsInput={true}
            onInputChange={[Function]}
            onOpen={[Function]}
            onSelectResetsInput={true}
            openOnClick={true}
            optionComponent={[Function]}
            options={Array []}
            pageSize={5}
            placeholder="Loading..."
            removeSelected={true}
            required={false}
            rtl={false}
            scrollMenuIntoView={true}
            searchPromptText="Type to search"
            searchable={true}
            simpleValue={false}
            tabSelectsValue={true}
            trimFilter={true}
            valueComponent={[Function]}
            valueKey="value"
            valueRenderer={[Function]}
          >
            <div
              className="Select select is-clearable is-loading is-searchable Select--single"
            >
              <input
                disabled={false}
                name="demo"
                type="hidden"
                value=""
              />
              <div
                className="Select-control"
                onKeyDown={[Function]}
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
              >
                <span
                  className="Select-multi-value-wrapper"
                  id="react-select-2--value"
                >
                  <div
                    className="Select-placeholder"
                  >
                    Loading...
                  </div>
                  <AutosizeInput
                    aria-activedescendant="react-select-2--value"
                    aria-expanded="false"
                    aria-haspopup="false"
                    aria-owns=""
                    className="Select-input"
                    id="demo"
                    injectStyles={true}
                    minWidth="5"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    required={false}
                    role="combobox"
                    value=""
                  />
                </span>
                <span
                  aria-hidden="true"
                  className="Select-loading-zone"
                >
                  <span
                    className="Select-loading"
                  />
                </span>
                <span
                  className="Select-arrow-zone"
                  onMouseDown={[Function]}
                >
                  <span
                    className="Select-arrow"
                    onMouseDown={[Function]}
                  />
                </span>
              </div>
            </div>
          </Select>
        </Async>
        <DropDown
          className="caret"
          fill="currentColor"
          height={32}
          width={32}
        />
      </div>
    </div>
  </div>
</SingleSelect>
`;
