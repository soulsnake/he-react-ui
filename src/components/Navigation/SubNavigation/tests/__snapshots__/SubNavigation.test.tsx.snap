// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<withRouter(SubNavigation) /> rendered correctly with Has back button fixture 1`] = `
<withRouter(SubNavigation)
  backRoute="/feedback"
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
        Object {
          "key": "TERTIARY",
          "label": "Google",
          "route": "https://wwww.google.com/",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  />
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with OnePracticeWithChildren fixture 1`] = `
<withRouter(SubNavigation)
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "My account",
          "route": "/parent",
        },
        Object {
          "key": "MAIN 2",
          "label": "Data & privacy",
          "route": "/parent2",
        },
        Object {
          "key": "MAIN 3",
          "label": "Change password",
          "route": "/parent3",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
        Object {
          "key": "TERTIARY",
          "label": "Google",
          "route": "https://wwww.google.com/",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  />
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with default fixture 1`] = `
<withRouter(SubNavigation)
  item={
    Object {
      "badge": "FREE",
      "items": Array [
        Object {
          "key": "MAIN",
          "label": "Main",
          "route": "/parent",
        },
        Object {
          "key": "SECONDARY",
          "label": "Secondary",
          "route": "/parent/secondary",
        },
      ],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
      Object {
        "label": "Location B",
        "value": "Location B",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  />
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with loading fixture 1`] = `
<withRouter(SubNavigation)
  item={
    Object {
      "items": Array [],
      "key": "placeholder",
      "route": "#",
      "title": "",
    }
  }
  loading={true}
  locations={Array []}
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  />
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with multiPracticeNoChildren fixture 1`] = `
<withRouter(SubNavigation)
  item={
    Object {
      "badge": "FREE",
      "items": Array [],
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
      Object {
        "label": "Location B",
        "value": "Location B",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  />
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with noChildren fixture 1`] = `
<withRouter(SubNavigation)
  item={
    Object {
      "icon": "Home",
      "items": Array [],
      "key": "HOME",
      "label": "Home",
      "route": "/",
      "title": "Welcome home",
    }
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  />
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with noItem fixture 1`] = `
<withRouter(SubNavigation)
  item={null}
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  />
</withRouter(SubNavigation)>
`;

exports[`<withRouter(SubNavigation) /> rendered correctly with onePractice fixture 1`] = `
<withRouter(SubNavigation)
  item={
    Object {
      "badge": "FREE",
      "key": "PARENT",
      "label": "Parent",
      "route": "/parent",
      "title": "Parent title",
    }
  }
  locations={
    Array [
      Object {
        "label": "Location A",
        "value": "Location A",
      },
    ]
  }
  logoutRoute="/logout"
>
  <Route
    render={[Function]}
  />
</withRouter(SubNavigation)>
`;
